/*
 * Copyright (c) 2015 United States Government as represented by the 
 * Administrator of the National Aeronautics and Space Administration.
 * All Rights Reserved.
 */

#include "Message.idl"

module rapid {
  module ext {
    module astrobee {

      //@copy-declaration /**
      //@copy-declaration  * The joint state of Astrobee's arm
      //@copy-declaration  * <ul>
      //@copy-declaration  *   <li>ARM_JOINT_STATE_UNKNOWN: The arm doesn't know what state it is in
      //@copy-declaration  *   <li>ARM_JOINT_STATE_STOWED: The arm is not deployed (thus not moving)
      //@copy-declaration  *   <li>ARM_JOINT_STATE_DEPLOYING: The arm is deploying itself
      //@copy-declaration  *   <li>ARM_JOINT_STATE_STOPPED: The arm is deployed, but not moving
      //@copy-declaration  *   <li>ARM_JOINT_STATE_MOVING: The arm is deployed and moving
      //@copy-declaration  *   <li>ARM_JOINT_STATE_STOWING: The arm is stowing itself
      //@copy-declaration  * </ul>
      //@copy-declaration  */
      enum ArmJointState {
        ARM_JOINT_STATE_UNKNOWN,
        ARM_JOINT_STATE_STOWED,
        ARM_JOINT_STATE_DEPLOYING,
        ARM_JOINT_STATE_STOPPED,
        ARM_JOINT_STATE_MOVING,
        ARM_JOINT_STATE_STOWING
      };

      //@copy-declaration /**
      //@copy-declaration  * The state of Astrobee's arm's gripper
      //@copy-declaration  * <ul>
      //@copy-declaration  *   <li>ARM_GRIPPER_STATE_UNKNOWN: Astrobee's gripper doesn't know what state it is in
      //@copy-declaration  *   <li>ARM_GRIPPER_STATE_UNCALIBRATED: Astrobee's gripper isn't calibrated and thus doesn't know what state it is in
      //@copy-declaration  *   <li>ARM_GRIPPER_STATE_CALIBRATING: Astrobee's gripper is going through a calibration sequence.
      //@copy-declaration  *   <li>ARM_GRIPPER_STATE_CLOSED: Astrobee's lil' fingers are clenched tight
      //@copy-declaration  *   <li>ARM_GRIPPER_STATE_OPEN: Astrobee's lil' fingers are wide open
      //@copy-declaration  * </ul>
      //@copy-declaration  */
      enum ArmGripperState {
        ARM_GRIPPER_STATE_UNKNOWN,
        ARM_GRIPPER_STATE_UNCALIBRATED,
        ARM_GRIPPER_STATE_CALIBRATING,
        ARM_GRIPPER_STATE_CLOSED,
        ARM_GRIPPER_STATE_OPEN
      };

      //@copy-c-declaration class ArmStateTypeSupport;
      //@copy-c-declaration class ArmStateDataWriter;
      //@copy-c-declaration class ArmStateDataReader;
      //@copy-c-declaration struct ArmStateSeq;

      //@copy-declaration /**
      //@copy-declaration   * The state of Astrobee's arm
      //@copy-declaration   */
      valuetype ArmState : Message {
        //@copy-c-declaration #if RTI_DDS_VERSION_MAJOR < 4 || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR < 5) || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR  == 5 && RTI_DDS_VERSION_RELEASE != 'f' )
        //@copy-c-declaration typedef ArmStateTypeSupport TypeSupport;
        //@copy-c-declaration typedef ArmStateDataWriter DataWriter;
        //@copy-c-declaration typedef ArmStateDataReader DataReader;
        //@copy-c-declaration typedef ArmStateSeq Seq;
        //@copy-c-declaration #endif
        //@copy-c-declaration typedef ArmState Type;

        //@copy-declaration /** @see ArmJointState */
        public ArmJointState jointState;

        //@copy-declaration /** @see ArmGripperState */
        public ArmGripperState gripperState;
      };

    };
  };
};
