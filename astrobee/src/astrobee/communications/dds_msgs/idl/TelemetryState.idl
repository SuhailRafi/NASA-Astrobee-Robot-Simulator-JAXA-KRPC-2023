/*
 * Copyright 2015 (c) 2015 Intelligent Robotics Group, NASA ARC
 */

#include "TelemetryConfig.idl"

module rapid {
  module ext {
    module astrobee {

      struct CameraInfo {
        boolean streaming;
        boolean recording;
        CameraResolution resolution;
        float frameRate;
        float bandwidth;
      };

      typedef sequence<CameraInfo, 8> CameraInfoSequence8;

      //@copy-c-declaration class TelemetryStateTypeSupport;
      //@copy-c-declaration class TelemetryStateDataWriter;
      //@copy-c-declaration class TelemetryStateDataReader;
      //@copy-c-declaration struct TelemetryStateSeq;

      //@copy-declaration /**
      //@copy-declaration   * The state of telemetry flowing to GDS
      //@copy-declaration   */
      valuetype TelemetryState : Message {
        //@copy-c-declaration #if RTI_DDS_VERSION_MAJOR < 4 || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR < 5) || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR  == 5 && RTI_DDS_VERSION_RELEASE != 'f' )
        //@copy-c-declaration typedef TelemetryStateTypeSupport TypeSupport;
        //@copy-c-declaration typedef TelemetryStateDataWriter DataWriter;
        //@copy-c-declaration typedef TelemetryStateDataReader DataReader;
        //@copy-c-declaration typedef TelemetryStateSeq Seq;
        //@copy-c-declaration #endif
        //@copy-c-declaration typedef TelemetryState Type;

        public float commStatusRate;
        public float cpuStateRate;
        public float diskStateRate;
        public float ekfStateRate;
        public float gncStateRate;
        public float pmcCmdStateRate;
        public float positionRate;
        public float sparseMappingPoseRate;

        public CameraInfoSequence8 cameras;
      };

    };
  };
};
