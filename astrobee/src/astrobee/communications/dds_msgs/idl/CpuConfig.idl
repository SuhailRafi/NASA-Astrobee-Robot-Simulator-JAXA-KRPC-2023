/*
 * Copyright 2017 (c) 2017 Intelligent Robotics Group, NASA ARC
 */

#include "Message.idl"

module rapid {
  module ext {
    module astrobee {

      typedef sequence<unsigned long, 8> UnsignedLongSequence8;

      //@copy-declaration /**
      //@copy-declaration   * The configuration of a cpu
      //@copy-declaration   * - name: machine name
      //@copy-declaration   * - num_cpus: number of cpus
      //@copy-declaration   * - max_frequencies: max frequency for each cpu
      //@copy-declaration   */
      struct CpuInfoConfig {
        String16 name;
        short num_cpus;
        UnsignedLongSequence8 max_frequencies;
      };

      typedef sequence<CpuInfoConfig, 8> CpuInfoConfigSequence8;

      //@copy-c-declaration class CpuConfigTypeSupport;
      //@copy-c-declaration class CpuConfigDataWriter;
      //@copy-c-declaration class CpuConfigDataReader;
      //@copy-c-declaration struct CpuConfigSeq;

      //@copy-declaration /**
      //@copy-declaration   * Config for the CpuState message.
      //@copy-declaration   */
      valuetype CpuConfig : Message {
        //@copy-c-declaration #if RTI_DDS_VERSION_MAJOR < 4 || (RTI_DDS_VERSION_MAJOR == 4 && RTI_DDS_VERISON_MINOR < 5) || (RTI_DDS_VERSION_MAJOR == 4 && RTI_DDS_VERISON_MINOR == 5 && RTI_DDS_VERSION_RELEASE != 'f')
        //@copy-c-declaration typedef CpuConfigTypeSupport TypeSupport;
        //@copy-c-declaration typedef CpuConfigDataWriter DataWriter;
        //@copy-c-declaration typedef CpuConfigDataReader DataReader;
        //@copy-c-declaration typedef CpuConfigSeq Seq;
        //@copy-c-declaration #endif
        //@copy-c-declaration typedef CpuConfig Type;

        public CpuInfoConfigSequence8 machines;
      };
    };
  };
};
