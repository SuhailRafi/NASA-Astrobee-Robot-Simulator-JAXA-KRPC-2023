/*
 * Copyright 2015 (c) 2015 Intelligent Robotics Group, NASA ARC
 */

#include "Message.idl"

module rapid {
  module ext {
    module astrobee {
      struct BatteryInfo {
        float percentage;
        float temperature;
        float voltage;
        float current;
        float remainingCapacity;
      };

      typedef sequence<BatteryInfo, 4> BatteryInfoSequence4;

      //@copy-c-declaration class EpsStateTypeSupport;
      //@copy-c-declaration class EpsStateDataWriter;
      //@copy-c-declaration class EpsStateDataReader;
      //@copy-c-declaration struct EpsStateSeq;

      //@copy-declaration /**
      //@copy-declaration   * The state of the data partitions on Astrobee
      //@copy-declaration   */
      valuetype EpsState : Message {
        //@copy-c-declaration #if RTI_DDS_VERSION_MAJOR < 4 || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR < 5) || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR  == 5 && RTI_DDS_VERSION_RELEASE != 'f' )
        //@copy-c-declaration typedef EpsStateTypeSupport TypeSupport;
        //@copy-c-declaration typedef EpsStateDataWriter DataWriter;
        //@copy-c-declaration typedef EpsStateDataReader DataReader;
        //@copy-c-declaration typedef EpsStateSeq Seq;
        //@copy-c-declaration #endif
        //@copy-c-declaration typedef EpsState Type;

        public BatteryInfoSequence4 batteries;

        //@copy-declaration /** The percentage remaining of each battery added
        //@copy-declaration   * up. This value can be over 100.
        //@copy-declaration   */
        public float batteryTotal;

        //@copy-declaration /** The estimated time remaining in minutes. It is
        //@copy-declaration   * calculated by adding up the current capacity
        //@copy-declaration   * and current for all of the batteries and then
        //@copy-declaration   * dividing the current capacity by the current.
        //@copy-declaration   * It is then rounded to the nearest 10 minutes.
        //@copy-declaration   */
        public long estimatedMinutesRemaining;
      };


    };
  };
};
