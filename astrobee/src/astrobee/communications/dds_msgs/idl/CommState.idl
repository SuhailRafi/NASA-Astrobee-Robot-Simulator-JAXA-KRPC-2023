/*
 * Copyright 2015 (c) 2015 Intelligent Robotics Group, NASA ARC
 */

#include "Message.idl"

module rapid {
  module ext {
    module astrobee {

      //@copy-c-declaration class CommStateTypeSupport;
      //@copy-c-declaration class CommStateDataWriter;
      //@copy-c-declaration class CommStateDataReader;
      //@copy-c-declaration struct CommStateSeq;

      //@copy-declaration /**
      //@copy-declaration   * Network state of Astrobee
      //@copy-declaration   */
      valuetype CommState : Message {
        //@copy-c-declaration #if RTI_DDS_VERSION_MAJOR < 4 || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR < 5) || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR  == 5 && RTI_DDS_VERSION_RELEASE != 'f' )
        //@copy-c-declaration typedef CommStateTypeSupport TypeSupport;
        //@copy-c-declaration typedef CommStateDataWriter DataWriter;
        //@copy-c-declaration typedef CommStateDataReader DataReader;
        //@copy-c-declaration typedef CommStateSeq Seq;
        //@copy-c-declaration #endif
        //@copy-c-declaration typedef CommState Type;

        //@copy-declaration /** Whether the MLP wireless is connected */
        public boolean wirelessConnected;

        //@copy-declaration /** Name of the AP Astrobee is connected to */
        public String64 apName;

        //@copy-declaration /** BSSID of the connected AP */
        public String32 bssid;

        //@copy-declaration /** RSSI to the connected AP */
        public float rssi;

        //@copy-declaration /** What frequency (2.4/5.8) we are connected at */
        public float frequency;

        //@copy-declaration /** Which channel within the frequency? */
        public long channel;

        //@copy-declaration /** Whether we are connected to the LAN as well */
        public boolean lanConnected;
      };

    };
  };
};
