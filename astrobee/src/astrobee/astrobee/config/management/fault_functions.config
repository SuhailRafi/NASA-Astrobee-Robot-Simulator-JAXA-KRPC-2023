-- Copyright (c) 2017, United States Government, as represented by the
-- Administrator of the National Aeronautics and Space Administration.
--
-- All rights reserved.
--
-- The Astrobee platform is licensed under the Apache License, Version 2.0
-- (the "License"); you may not use this file except in compliance with the
-- License. You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
-- WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
-- License for the specific language governing permissions and limitations
-- under the License.
--

-- Keep constant with Command Args message file. Used to create fault responses
-- in the fault table.

BOOL = 0
DOUBLE = 1
FLOAT = 2
INT = 3
LONGLONG = 4
STRING = 5
VEC3d = 6
MAT33f = 7

-- Value helper function. Used to convert a value into a Lua table that helps 
-- the system monitor read in the correct value type
function double(val)
  return {DOUBLE, val}
end

-- Value helper function. Used to convert a value into a Lua table that helps 
-- the system monitor read in the correct value type
function float(val)
  return {FLOAT, val}
end

-- Value helper function. Used to convert a value into a Lua table that helps 
-- the system monitor read in the correct value type
function int(val)
  return {INT, val}
end

-- Value helper function. Used to convert a value into a Lua table that helps 
-- the system monitor read in the correct value type
function longlong(val)
  return {LONGLONG, val}
end

-- Value helper function. Used to convert values into a Lua table that helps 
-- the system monitor read in the correct value type
function vec3d(v1, v2, v3)
  return {VEC3d, v1, v2, v3}
end

-- Value helper function. Used to convert values into a Lua table that helps 
-- the system monitor read in the correct value type
function mat33f(v1, v2, v3, v4, v5, v6, v7, v8, v9)
  return {MAT33f, v1, v2, v3, v4, v5, v6, v7, v8, v9}
end

-- Response helper function. Used to convert a command into a lua table that is
-- easy for the system monitor to read in. The first argument should be the
-- name of the command and the remaining arguments should be the command 
-- arguments. If the type of an argument is not a boolean or string, call the
-- corresponding function in this function call. For example if the argument is
-- a float, a function call would look something like this:
-- command(armPanAndTilt, float(35.6), float(-21.25))
function command(...)
  cmd = {}
  local num = select("#", ...)

  if (num < 1) then
    return cmd
  end

  -- First argument should be the name
  local cmd_name = select(1, ...)
  cmd.name = cmd_name

  -- Rest of the arguments are the arguments to the command
  -- If there are no arguments, there are no arguments to the command
  if (num > 1) then
    cmd.args = {}

    local tmp_val
    -- Skip command name
    for i=2,num do
      tmp_val = select(i, ...)
      -- Table already made with type and value
      if type(tmp_val) == "table" then
        table.insert(cmd.args, tmp_val)
      elseif type(tmp_val) == "boolean" then
        table.insert(cmd.args, {BOOL, tmp_val})
      elseif type(tmp_val) == "string" then
        table.insert(cmd.args, {STRING, tmp_val})
      end
    end
  end

  return cmd
end

