-- Copyright (c) 2017, United States Government, as represented by the
-- Administrator of the National Aeronautics and Space Administration.
--
-- All rights reserved.
--
-- The Astrobee platform is licensed under the Apache License, Version 2.0
-- (the "License"); you may not use this file except in compliance with the
-- License. You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
-- WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
-- License for the specific language governing permissions and limitations
-- under the License.

robot_mlp_address = "10.42.0.25"
robot_llp_address = "10.42.0.26"

robot_i2c_bus = "/dev/i2c-0"

robot_imu_drdy_pin = 101

robot_geometry = {
-- Placeholder transforms, not accurate!
  nav_cam_to_haz_cam_transform = transform(vec3(0.071421481, -0.00030319673, 0.0018058249), quat4(-0.0030431141, 0.0092646368, 0.99993195, 0.0064039206)),
  nav_cam_to_sci_cam_transform = transform(vec3(-0.076526224, 0.011869553, 0.045409155), quat4(-0.0035414316, 0.0048089362, -0.0071515076, 0.99995659)),
  haz_cam_depth_to_image_transform = {
    0.91602851, -0.00031586647, -0.0028485861, 0.0029767338,
    0.00032189197, 0.91603089, 0.0019373744, -0.0020741879,
    0.0028479115, -0.0019383659, 0.91602652, -0.0042296964,
    0, 0, 0, 1},

  perch_cam_transform      = transform(vec3(-0.1375, 0.055, -0.03), quat4(0, -0.70711, 0, 0.70711)),
  haz_cam_transform        = transform(vec3(0, 0, 0), quat4(0, 0, 0, 1)), -- placeholder, not valid!

  -- rotation from quatmult(eulers_to_quat(0*pi/180, 2.4*pi/180, 1.2*pi/180), quatmult(eulers_to_quat(0, 0, pi/2), eulers_to_quat(pi, pi/2, pi)))
  nav_cam_transform        = transform(vec3(0.1145, 0.0536, 0.1016),            quat4(0.4831, 0.5302, 0.5334, 0.4484)),
  dock_cam_transform       = transform(vec3(-0.12094, -0.05715, -0.01905),        quat4(-0.5, -0.5, 0.5, 0.5)),
  -- translation: [0.0100375 -0.0114875 -0.0367625] euler angles: [7.318125 -0.243125 0.879375] degrees
  imu_transform            = transform(vec3(0.0177375, 0.0219125, -0.0319625), quat4(0.0043601096, -0.0066617904, 0.75077957, 0.66050535)),
  -- Not accurate only for sim purposes
  sci_cam_transform        = transform(vec3(0.118, 0.0, -0.096), quat4(0.500, 0.500, 0.500, 0.500) )
};

robot_camera_calibrations = {
  nav_cam = {
    distortion_coeff = 0.999514,
    intrinsic_matrix = {
      608.73545, 0.0, 624.75917,
      0.0, 607.95359, 520.31453,
      0.0, 0.0, 1.0
    },
    gain=0,
    exposure=160
  },
  dock_cam = {
    distortion_coeff=1.06251,
    intrinsic_matrix={
      947.568, 0.0, 615.626,
      0.0, 949.44, 505.874,
      0.0, 0.0, 1.0
    },
    gain=72,
    exposure=127
  },
-- Placeholder for perch_cam, not accurate!
  perch_cam = {
    distortion_coeff = {-0.366735, 0.182027, 0.00218105, 0.0114682},
    intrinsic_matrix = {
      209.21199, 0.0, 94.688486,
      0.0, 207.62067, 84.04047,
      0.0, 0.0, 1.0
    },
    gain=100,
    exposure=150
  },
-- Placeholder for haz_cam, not accurate!
  haz_cam = {
    distortion_coeff = {-0.29405, -0.0597744, 0.00554234, 0.00463849},
    intrinsic_matrix = {
      217.12576, 0.0, 112.04125,
      0.0, 216.12197, 82.598679,
      0.0, 0.0, 1.0
    },
    gain=50,
    exposure=150
  },
-- Placeholder for sci_cam, not accurate!
  sci_cam = {
    distortion_coeff = {0.128628, -0.167456, 0.00213421, -0.00262211},
    intrinsic_matrix = {
      859.44015, 0.0, 754.24485,
      0.0, 849.35466, 487.7349,
      0.0, 0.0, 1.0
    },
    gain=50,
    exposure=150
  },
  nav_cam_to_haz_cam_timestamp_offset = -0.02,
  nav_cam_to_sci_cam_timestamp_offset = 0.18
}

-- PMC bus ordering and i2c trims {stbd, port}
robot_pmc_i2c_addrs = {0x20, 0x21}
robot_stbd_nozzle_calibration = {
  {0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0}
}
robot_port_nozzle_calibration = {
  {0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0}
}

robot_perch_cam_device = "0005-1203-0034-1013"
robot_haz_cam_device   = "0004-3608-0024-1107"

robot_vive_extrinsics = {}

agent_name = "P4C"

heartbeat_queue_size = 20

nodes_not_running = {}
