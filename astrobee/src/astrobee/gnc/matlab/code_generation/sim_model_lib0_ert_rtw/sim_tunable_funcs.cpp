// Autogenerated file, see write_tunable_param_functions for details

#include "sim_tunable_funcs.h"
#include <config_reader/config_reader.h>
#include <ros/console.h>
#include <msg_conversions/msg_conversions.h>

// Do config setup and add includes
void sim_ReadParams(config_reader::ConfigReader* config,  RT_MODEL_sim_model_lib0_T* sim) {

  auto & p = sim->defaultParam;

  if (!msg_conversions::config_read_array(config, "tun_abp_p_dockcam_body_body_sim", 3 , p->tun_abp_p_dockcam_body_body_sim))
    ROS_FATAL("Unspecified tun_abp_p_dockcam_body_body_sim.");
  if (!msg_conversions::config_read_array(config, "tun_abp_p_imu_body_body", 3 , p->tun_abp_p_imu_body_body))
    ROS_FATAL("Unspecified tun_abp_p_imu_body_body.");
  if (!msg_conversions::config_read_array(config, "tun_abp_p_navcam_body_body_sim", 3 , p->tun_abp_p_navcam_body_body_sim))
    ROS_FATAL("Unspecified tun_abp_p_navcam_body_body_sim.");
  if (!msg_conversions::config_read_array(config, "tun_abp_p_perchcam_body_body_sim", 3 , p->tun_abp_p_perchcam_body_body_sim))
    ROS_FATAL("Unspecified tun_abp_p_perchcam_body_body_sim.");
  if (!msg_conversions::config_read_array(config, "tun_abp_q_body2dockcam", 4 , p->tun_abp_q_body2dockcam))
    ROS_FATAL("Unspecified tun_abp_q_body2dockcam.");
  if (!msg_conversions::config_read_array(config, "tun_abp_q_body2navcam", 4 , p->tun_abp_q_body2navcam))
    ROS_FATAL("Unspecified tun_abp_q_body2navcam.");
  if (!msg_conversions::config_read_array(config, "tun_abp_q_body2perchcam", 4 , p->tun_abp_q_body2perchcam))
    ROS_FATAL("Unspecified tun_abp_q_body2perchcam.");
  if (!msg_conversions::config_read_array(config, "tun_abp_quat_body2imu", 4 , p->tun_abp_quat_body2imu))
    ROS_FATAL("Unspecified tun_abp_quat_body2imu.");
  if (!msg_conversions::config_read_array(config, "tun_ase_gravity_accel", 3 , p->tun_ase_gravity_accel))
    ROS_FATAL("Unspecified tun_ase_gravity_accel.");
  if (!config->GetReal("tun_bpm_PM1_thrust_error_sf", &p->tun_bpm_PM1_thrust_error_sf))
    ROS_FATAL("Unspecified tun_bpm_PM1_thrust_error_sf.");
  if (!config->GetReal("tun_bpm_PM2_thrust_error_sf", &p->tun_bpm_PM2_thrust_error_sf))
    ROS_FATAL("Unspecified tun_bpm_PM2_thrust_error_sf.");
  if (!config->GetReal("tun_bpm_noise_on_flag", &p->tun_bpm_noise_on_flag))
    ROS_FATAL("Unspecified tun_bpm_noise_on_flag.");
  if (!config->GetReal("tun_cvs_dockcam_focal_length_X", &p->tun_cvs_dockcam_focal_length_X))
    ROS_FATAL("Unspecified tun_cvs_dockcam_focal_length_X.");
  if (!config->GetReal("tun_cvs_dockcam_focal_length_Y", &p->tun_cvs_dockcam_focal_length_Y))
    ROS_FATAL("Unspecified tun_cvs_dockcam_focal_length_Y.");
  if (!config->GetReal("tun_cvs_dockcam_num_pixels_X", &p->tun_cvs_dockcam_num_pixels_X))
    ROS_FATAL("Unspecified tun_cvs_dockcam_num_pixels_X.");
  if (!config->GetReal("tun_cvs_dockcam_num_pixels_Y", &p->tun_cvs_dockcam_num_pixels_Y))
    ROS_FATAL("Unspecified tun_cvs_dockcam_num_pixels_Y.");
  if (!config->GetReal("tun_cvs_navcam_focal_length_X", &p->tun_cvs_navcam_focal_length_X))
    ROS_FATAL("Unspecified tun_cvs_navcam_focal_length_X.");
  if (!config->GetReal("tun_cvs_navcam_focal_length_Y", &p->tun_cvs_navcam_focal_length_Y))
    ROS_FATAL("Unspecified tun_cvs_navcam_focal_length_Y.");
  if (!config->GetReal("tun_cvs_navcam_num_pixels_X", &p->tun_cvs_navcam_num_pixels_X))
    ROS_FATAL("Unspecified tun_cvs_navcam_num_pixels_X.");
  if (!config->GetReal("tun_cvs_navcam_num_pixels_Y", &p->tun_cvs_navcam_num_pixels_Y))
    ROS_FATAL("Unspecified tun_cvs_navcam_num_pixels_Y.");
  if (!config->GetReal("tun_cvs_perchcam_focal_length_X", &p->tun_cvs_perchcam_focal_length_X))
    ROS_FATAL("Unspecified tun_cvs_perchcam_focal_length_X.");
  if (!config->GetReal("tun_cvs_perchcam_focal_length_Y", &p->tun_cvs_perchcam_focal_length_Y))
    ROS_FATAL("Unspecified tun_cvs_perchcam_focal_length_Y.");
  if (!config->GetReal("tun_cvs_perchcam_num_pixels_X", &p->tun_cvs_perchcam_num_pixels_X))
    ROS_FATAL("Unspecified tun_cvs_perchcam_num_pixels_X.");
  if (!config->GetReal("tun_cvs_perchcam_num_pixels_Y", &p->tun_cvs_perchcam_num_pixels_Y))
    ROS_FATAL("Unspecified tun_cvs_perchcam_num_pixels_Y.");
  if (!msg_conversions::config_read_array(config, "tun_env_accel_dof_gain", 3 , p->tun_env_accel_dof_gain))
    ROS_FATAL("Unspecified tun_env_accel_dof_gain.");
  if (!msg_conversions::config_read_array(config, "tun_env_alpha_dof_gain", 3 , p->tun_env_alpha_dof_gain))
    ROS_FATAL("Unspecified tun_env_alpha_dof_gain.");
  if (!msg_conversions::config_read_matrix(config, "tun_inertia_error_mat", 3, 3, p->tun_inertia_error_mat))
    ROS_FATAL("Unspecified tun_inertia_error_mat.");
  if (!msg_conversions::config_read_array(config, "tun_ini_P_B_ISS_ISS", 3 , p->tun_ini_P_B_ISS_ISS))
    ROS_FATAL("Unspecified tun_ini_P_B_ISS_ISS.");
  if (!msg_conversions::config_read_array(config, "tun_ini_Q_ISS2B", 4 , p->tun_ini_Q_ISS2B))
    ROS_FATAL("Unspecified tun_ini_Q_ISS2B.");
  if (!msg_conversions::config_read_array(config, "tun_ini_V_B_ISS_ISS", 3 , p->tun_ini_V_B_ISS_ISS))
    ROS_FATAL("Unspecified tun_ini_V_B_ISS_ISS.");
  if (!msg_conversions::config_read_array(config, "tun_ini_omega_B_ISS_B", 3 , p->tun_ini_omega_B_ISS_B))
    ROS_FATAL("Unspecified tun_ini_omega_B_ISS_B.");
  if (!msg_conversions::config_read_array(config, "tun_iss_omega_ISS_ECI_ISS", 3 , p->tun_iss_omega_ISS_ECI_ISS))
    ROS_FATAL("Unspecified tun_iss_omega_ISS_ECI_ISS.");
  if (!config->GetReal("tun_mass_error", &p->tun_mass_error))
    ROS_FATAL("Unspecified tun_mass_error.");
  if (!msg_conversions::config_read_array(config, "tun_sim_cg_error", 3 , p->tun_sim_cg_error))
    ROS_FATAL("Unspecified tun_sim_cg_error.");
  bool ase_gravity_removal;
  if (!config->GetBool("tun_ase_gravity_removal", &ase_gravity_removal))
  ROS_FATAL("Unspecified tun_ase_gravity_removal.");
  p->tun_ase_gravity_removal = ase_gravity_removal;
  bool cvs_noise_on;
  if (!config->GetBool("tun_cvs_noise_on", &cvs_noise_on))
  ROS_FATAL("Unspecified tun_cvs_noise_on.");
  p->tun_cvs_noise_on = cvs_noise_on;
  bool env_drag_disturb_on;
  if (!config->GetBool("tun_env_drag_disturb_on", &env_drag_disturb_on))
  ROS_FATAL("Unspecified tun_env_drag_disturb_on.");
  p->tun_env_drag_disturb_on = env_drag_disturb_on;
  bool epson_report_truth;
  if (!config->GetBool("tun_epson_report_truth", &epson_report_truth))
  ROS_FATAL("Unspecified tun_epson_report_truth.");
  p->tun_epson_report_truth = epson_report_truth;
}
