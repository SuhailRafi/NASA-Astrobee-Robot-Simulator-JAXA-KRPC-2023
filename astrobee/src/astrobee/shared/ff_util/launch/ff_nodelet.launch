<!-- Copyright (c) 2017, United States Government, as represented by the     -->
<!-- Administrator of the National Aeronautics and Space Administration.     -->
<!--                                                                         -->
<!-- All rights reserved.                                                    -->
<!--                                                                         -->
<!-- The Astrobee platform is licensed under the Apache License, Version 2.0 -->
<!-- (the "License"); you may not use this file except in compliance with    -->
<!-- the License. You may obtain a copy of the License at                    -->
<!--                                                                         -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                          -->
<!--                                                                         -->
<!-- Unless required by applicable law or agreed to in writing, software     -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,       -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or         -->
<!-- implied. See the License for the specific language governing            -->
<!-- permissions and limitations under the License.                          -->
<launch>

  <!-- Mandatory arguments -->
  <arg name="class"/>                              <!-- Nodelet class        -->
  <arg name="name"/>                               <!-- Nodelet name         -->

  <!-- Node filtering arguments -->
  <arg name="default" default="true" />            <!-- Node runs by default -->
  <arg name="spurn" default="" />                  <!-- Prevent node         -->
  <arg name="nodes" default="" />                  <!-- Launch node group    -->
  <arg name="extra" default="" />                  <!-- Inject extra nodse   -->
  <arg name="debug" default="" />                  <!-- Debug select nodes   -->

  <!-- Optional arguments -->
  <arg name="manager" default="" />                <!-- Nodelet manager name -->
  <arg name="arguments" default="" />              <!-- Arguments to nodelet -->
  <arg name="output" default="screen" />
  <arg name="terminal" default="" />               <!-- Output to terminal   -->

  <!-- String search -->
  <arg name="b_limited" value="$(eval arg('nodes') != '')" />
  <arg name="b_spurn" value="$(eval arg('name') in arg('spurn').split(','))" />
  <arg name="b_nodes" value="$(eval arg('name') in arg('nodes').split(','))" />
  <arg name="b_extra" value="$(eval arg('name') in arg('extra').split(','))" />
  <arg name="b_debug" value="$(eval arg('name') in arg('debug').split(','))" />
  <arg name="enable" value="$(eval (not arg('b_spurn')) and (arg('b_extra')
      or arg('b_nodes') or (not arg('b_limited') and arg('default'))))" />

  <!-- Don't do anything if the node is disabled -->
  <group if="$(arg enable)">

    <!-- Debug mode only works on native, for now -->
    <arg name="prefix"
      value="$(eval 'x-terminal-emulator -e gdb -ex run --args' if arg('b_debug') else '')" />
    <env if="$(arg b_debug)" name="ROSCONSOLE_CONFIG_FILE"
      value="$(find astrobee)/resources/debug.config"/>

    <!-- If we want a new manager draw a nodegraph, or want to debug the node -->
    <arg name="standalone" value="$(eval optenv('ASTROBEE_NODEGRAPH','') != ''
      or arg('manager')=='' or arg('b_debug'))" />

    <!-- Determine the nodelet manager name -->
    <arg name="nodelet_manager" value="$(arg name)_$(anon manager)"
      if="$(arg standalone)"/>
    <arg name="nodelet_manager" value="$(arg manager)" unless="$(arg standalone)"/>

    <!-- Start a nodelet manager, if needed -->
    <node if="$(arg standalone)"
          pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)"
          args="manager" launch-prefix="$(arg prefix) $(arg terminal)" output="$(arg output)"/>

    <!-- Now inject the nodelet into the nodelet manager -->
    <node pkg="nodelet" type="nodelet" name="$(arg name)"
          required="false" respawn="false"
          args="load $(arg class) $(arg nodelet_manager) $(arg arguments)"
          output="$(arg output)"/>

  </group>

</launch>
