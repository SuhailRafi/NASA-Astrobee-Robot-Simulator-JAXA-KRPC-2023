<?xml version="1.0" ?><!-- (c) 2005-2015 Copyright, Real-Time Innovations, Inc.  All rights reserved. RTI grants Licensee a license to use, modify, compile, and create derivative works of the Software.  Licensee has the right to distribute object form only for use with RTI products.  The Software is provided "as is", with no warranty of any type, including any warranty for fitness for any purpose. RTI is under no obligation to maintain or support the Software.  RTI shall not be liable for any incidental or consequential damages arising out of the use or inability to use the software. --><dds version="5.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/5.1.0/rti_dds_profiles.xsd">
  <!-- ################################################################### -->
  <!-- ## RapidQosLibrary -->
  <!-- ################################################################### -->
  <qos_library name="RapidQosLibrary">
    <qos_profile is_default_qos="true" name="RapidDefaultQos">
      <participant_qos>
        <user_data>
          <!--  version of Qos File MUST CONVERT TO UNICODE: -->
          <!--  http://rishida.net/tools/conversion/ -->
          <!--  On Mixed Input text box, enter: YYYYMMDD.HHMMSS.III-LOC  -->
          <!--  where III = Initials (2 or 3 chars) LOC = 3 char location -->
          <!--  Version: 20110629.094600.HU-ARC -->
          <value>50, 48, 49, 49, 48, 54,0x32,0x39,0x2e,0x30,0x39,0x34,0x33,0x30,0x30,0x2e,0x48,0x55,0x2d,0x41,0x52,0x43</value>
        </user_data>
        <wire_protocol>
          <!-- default DDS well known ports -->
          <rtps_well_known_ports>
            <port_base>7400</port_base>
            <domain_id_gain>250</domain_id_gain>
            <participant_id_gain>2</participant_id_gain>
            <builtin_multicast_port_offset>0</builtin_multicast_port_offset>
            <builtin_unicast_port_offset>10</builtin_unicast_port_offset>
            <user_multicast_port_offset>1</user_multicast_port_offset>
            <user_unicast_port_offset>11</user_unicast_port_offset>
          </rtps_well_known_ports>
          <rtps_reserved_port_mask>MASK_DEFAULT</rtps_reserved_port_mask>
        </wire_protocol>
        <transport_builtin>
          <mask>UDPv4</mask>
        </transport_builtin>
        <discovery>
        <initial_peers>
          <element>127.0.0.1</element>
        </initial_peers>
          <!-- if false, we do an explicit configuration through the discovery-peers files. -->
          <!-- This limits accidental traffic on the robot-networks. -->
          <!-- For the ground-side router, allowing unknown peers might be preferred. -->
          <accept_unknown_peers>true</accept_unknown_peers>
        </discovery>
        <resource_limits>
          <!-- increase max property size to accommodate flow controllers -->
          <participant_property_string_max_length>4096</participant_property_string_max_length>
          <!-- Type-codes don't work with overly restricted buffer size, so we disable it. -->
          <!-- disabling type-code support -->
          <type_code_max_serialized_length>0</type_code_max_serialized_length>
          <type_object_max_serialized_length>0</type_object_max_serialized_length>
        </resource_limits>
        <property>
          <value>
            <!-- === Flow Controllers ===================================================================== -->
            <!-- === note that each flow controller will add about 600 characters to the cumulative size of -->
            <!-- === the property string, so resource_limits.participant_property_string_max_length must be -->
            <!-- === increased to accommodate the larger size -->
            <!-- NavMapFlowController -->
            <element>
              <name>dds.flow_controller.token_bucket.MeshFlowController.scheduling_policy</name>
              <value>DDS_EDF_FLOW_CONTROLLER_SCHED_POLICY</value>
            </element>
            <element>
              <name>dds.flow_controller.token_bucket.MeshFlowController.token_bucket.max_tokens</name>
              <value>12</value>
            </element>
            <element>
              <name>dds.flow_controller.token_bucket.MeshFlowController.token_bucket.tokens_added_per_period</name>
              <value>4</value>
            </element>
            <element>
              <name>dds.flow_controller.token_bucket.MeshFlowController.token_bucket.tokens_leaked_per_period</name>
              <value>0</value>
            </element>
            <element>
              <name>dds.flow_controller.token_bucket.MeshFlowController.token_bucket.bytes_per_token</name>
              <value>1250</value>
            </element>
            <element>
              <name>dds.flow_controller.token_bucket.MeshFlowController.token_bucket.period.sec</name>
              <value>0</value>
            </element>
            <element>
              <name>dds.flow_controller.token_bucket.MeshFlowController.token_bucket.period.nanosec</name>
              <value>5000000</value>
            </element>
            <!-- === Transport ============================================================================ -->
            <!-- maximum message size -->
            <element>
              <name>dds.transport.UDPv4.builtin.parent.message_size_max</name>
              <value>1250</value>
            </element>
            <element>
              <name>dds.transport.UDPv4.builtin.send_socket_buffer_size</name>
              <value>65535</value>
            </element>
            <element>
              <name>dds.transport.UDPv4.builtin.recv_socket_buffer_size</name>
              <value>65535</value>
            </element>
            <!-- === SHMEM Transport ====================================================================== -->
            <!-- maximum message size -->
            <element>
              <name>dds.transport.shmem.builtin.received_message_count_max </name>
              <value>512</value>
            </element>
            <element>
              <name>dds.transport.shmem.builtin.receive_buffer_size </name>
              <value>1048576</value>
            </element>
            <!-- allow/deny lists -->
            <!-- we try to exclude all vmware virtual network interfaces -->
            <element>
              <name>dds.transport.UDPv4.builtin.parent.deny_interfaces</name>
              <value>128.102.*,10.10.1.*,10.30.10.*,192.168.3.255,169.254.194.2,192.9.202.1,192.168.5.*,192.168.10.*,192.168.122.*</value>
            </element>
            <element>
              <name>dds.transport.UDPv4.builtin.parent.deny_multicast_interfaces</name>
              <value>128.102.*,10.10.1.*,10.30.10.*,192.168.3.255,169.254.194.2,192.9.202.1,192.168.5.*,192.168.10.*,192.168.122.*</value>
            </element>
          </value>
        </property>
      </participant_qos>
      <publisher_qos>
      </publisher_qos>
      <subscriber_qos>
      </subscriber_qos>
      <datareader_qos>
        <reader_resource_limits>
          <!-- disabling dynamically allocated fragments because it is causing 4.5e to crash on large fragmented messages (e.g. point clouds) -->
          <dynamically_allocate_fragmented_samples>0</dynamically_allocate_fragmented_samples>
        </reader_resource_limits>
      </datareader_qos>
      <datawriter_qos>
        <writer_resource_limits>
          <!-- see http://community.rti.com/content/forum-topic/instance-resources-dispose-and-unregister -->
          <instance_replacement>ALIVE_THEN_DISPOSED_INSTANCE_REPLACEMENT</instance_replacement>
        </writer_resource_limits>
        <publish_mode>
          <kind>ASYNCHRONOUS_PUBLISH_MODE_QOS</kind>
        </publish_mode>
      </datawriter_qos>
    </qos_profile>
    <!-- Best Effort base configuration -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidDefaultQos" name="RapidBestEffortQos">
      <datareader_qos>
        <reliability>
          <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
        </reliability>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>5</depth>
        </history>
      </datareader_qos>
      <datawriter_qos>
        <reliability>
          <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
        </reliability>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>5</depth>
        </history>
      </datawriter_qos>
    </qos_profile>
    <!-- Reliable base configuration -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidDefaultQos" name="RapidReliableQos">
      <datareader_qos>
        <reliability>
          <kind>RELIABLE_RELIABILITY_QOS</kind>
        </reliability>
        <history>
          <kind>KEEP_ALL_HISTORY_QOS</kind>
        </history>
      </datareader_qos>
      <datawriter_qos>
        <reliability>
          <kind>RELIABLE_RELIABILITY_QOS</kind>
        </reliability>
        <history>
          <!-- To implement strict reliability, we need to set the history to KEEP_ALL.          That way, undelivered samples will not be overwritten. -->
          <kind>KEEP_ALL_HISTORY_QOS</kind>
        </history>
      </datawriter_qos>
    </qos_profile>
    <!-- Reliable, durable base configuration -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidDefaultQos" name="RapidReliableDurableQos">
      <datareader_qos>
        <reliability>
          <kind>RELIABLE_RELIABILITY_QOS</kind>
        </reliability>
        <durability>
          <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
        </durability>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>1</depth>
        </history>
      </datareader_qos>
      <datawriter_qos>
        <reliability>
          <kind>RELIABLE_RELIABILITY_QOS</kind>
        </reliability>
        <durability>
          <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
        </durability>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>1</depth>
        </history>
      </datawriter_qos>
    </qos_profile>
    <!-- ===================================================== -->
    <!-- Generic per Topic Category Profiles -->
    <!-- ===================================================== -->
    <!-- Generic Config Profile -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidReliableDurableQos" name="RapidConfigQos"/>
    <!-- Generic State Profile -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidReliableDurableQos" name="RapidStateQos"/>
    <!-- Generic Sample Profile -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidBestEffortQos" name="RapidSampleQos"/>
    <!-- ===================================================== -->
    <!-- Per Topic Profiles -->
    <!-- ===================================================== -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidReliableDurableQos" name="RapidAckProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidAgentConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidAgentStateProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidAssetConfigProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidStateQos" name="RapidAssetStateProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidReliableQos" name="RapidCommandProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidCommandConfigProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidFrameStoreConfigProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidSampleQos" name="RapidImageSensorSampleProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidDefaultQos" name="RapidImageSensorScienceInstrumentProfile">
      <datareader_qos>
        <reliability>
          <kind>RELIABLE_RELIABILITY_QOS</kind>
        </reliability>
      </datareader_qos>
      <datawriter_qos>
        <reliability>
          <kind>RELIABLE_RELIABILITY_QOS</kind>
        </reliability>
      </datawriter_qos>
    </qos_profile>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidImageSensorScienceInstrumentProfile" name="RapidImageSensorPanoramaProfile">
      <datareader_qos>
        <durability>
          <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
        </durability>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>6</depth>
        </history>
      </datareader_qos>
      <datawriter_qos>
        <durability>
          <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
        </durability>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>6</depth>
        </history>
      </datawriter_qos>
    </qos_profile>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidImageSensorScienceInstrumentProfile" name="RapidImageSensorMiProfile">
      <datareader_qos>
        <durability>
          <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
        </durability>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>1</depth>
        </history>
      </datareader_qos>
      <datawriter_qos>
        <durability>
          <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
        </durability>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>1</depth>
        </history>
      </datawriter_qos>
    </qos_profile>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidStateQos" name="RapidImageSensorStateProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidJointConfigProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidReliableDurableQos" name="RapidJointSampleProfile"/>
    <!-- Extension: Macro ==================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidMacroConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="RapidMacroStateProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidNavMapConfigProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidSampleQos" name="RapidNavMapSampleProfile">
      <datawriter_qos>
        <publish_mode>
          <!--          <flow_controller_name>dds.flow_controller.token_bucket.NavMapFlowController</flow_controller_name> -->
        </publish_mode>
      </datawriter_qos>
    </qos_profile>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidNavMapTilesConfigProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidReliableDurableQos" name="RapidNavMapTilesSampleProfile">
      <datawriter_qos>
        <publish_mode>
          <!--          <flow_controller_name>dds.flow_controller.token_bucket.NavMapFlowController</flow_controller_name> -->
        </publish_mode>
        <reliability>
          <max_blocking_time>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </max_blocking_time>
        </reliability>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>1</depth>
        </history>
        <resource_limits>
          <max_samples>512</max_samples>
          <max_samples_per_instance>4</max_samples_per_instance>
          <max_instances>128</max_instances>
          <initial_instances>128</initial_instances>
          <initial_samples>512</initial_samples>
          <instance_hash_buckets>380</instance_hash_buckets>
        </resource_limits>
        <protocol>
          <rtps_reliable_writer>
            <high_watermark>32</high_watermark>
            <fast_heartbeat_period>
              <sec>0</sec>
              <nanosec>500000000</nanosec>
            </fast_heartbeat_period>
            <max_heartbeat_retries>8</max_heartbeat_retries>
            <inactivate_nonprogressing_readers>true</inactivate_nonprogressing_readers>
          </rtps_reliable_writer>
        </protocol>
      </datawriter_qos>
    </qos_profile>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidPointCloudConfigProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidSampleQos" name="RapidPointCloudSampleProfile">
      <datawriter_qos>
        <publish_mode>
          <!--          <flow_controller_name>dds.flow_controller.token_bucket.NavMapFlowController</flow_controller_name> -->
        </publish_mode>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>10</depth>
        </history>
      </datawriter_qos>
      <datareader_qos>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>100</depth>
        </history>
      </datareader_qos>
    </qos_profile>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidPositionConfigProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidSampleQos" name="RapidPositionSampleProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidStateQos" name="RapidQueueStateProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidRangeScanConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidRangeScanSampleProfile">
      <datareader_qos>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>1000</depth>
        </history>
      </datareader_qos>
      <datawriter_qos>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>200</depth>
        </history>
      </datawriter_qos>
    </qos_profile>
    <!-- Extension: SystemInfo =============================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidSystemInfoConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidSystemInfoSampleProfile"/>
    <!-- Extension: Trajectory2D ============================= -->
    <qos_profile base_name="RapidConfigQos" name="RapidTrajectory2DConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidTrajectory2DSampleProfile"/>
    <!-- Extension: Trajectory (Geometric) =================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidTrajectoryConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidTrajectorySampleProfile"/>
    <!-- Extension: Virtual E-Stop =========================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidVEStopConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="RapidVEStopStateProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidReliableDurableQos" name="RapidTextMessageProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidStateQos" name="RapidAccessControlStateProfile"/>
    <!-- ImageSamples -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidReliableQos" name="RapidSensorImageProfile"/>
    <!-- ===================================================== -->
    <!-- RAFT File Queue Profiles -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidStateQos" name="RapidFileQueueStateProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidStateQos" name="RapidFileQueueEntryStateProfile"/>
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidFileQueueConfigProfile"/>
    <!-- FileQueueSample -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidReliableQos" name="RapidFileQueueSampleProfile">
    </qos_profile>
    <!-- FileAnnounce -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidReliableDurableQos" name="RapidFileAnnounceProfile">
      <datawriter_qos>
        <ownership>
          <kind>EXCLUSIVE_OWNERSHIP_QOS</kind>
        </ownership>
        <ownership_strength>
          <value>100</value>
        </ownership_strength>
      </datawriter_qos>
      <datareader_qos>
        <ownership>
          <kind>EXCLUSIVE_OWNERSHIP_QOS</kind>
        </ownership>
      </datareader_qos>
    </qos_profile>
    <!-- FileAnnounceRepeater -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidFileAnnounceProfile" name="RaftFileAnnounceRepeaterProfile">
      <datawriter_qos>
        <ownership_strength>
          <value>50</value>
        </ownership_strength>
      </datawriter_qos>
    </qos_profile>
    <!-- FileQueueReceiver -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidSampleQos" name="RapidFileQueueReceiverSampleProfile"/>
    <qos_profile base_name="RapidFileQueueEntryStateProfile" name="RapidFileQueueReceiverEntryStateProfile"/>
    <!-- Process Manager -->
    <!-- ===================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidProcessManagerConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="RapidProcessManagerStateProfile"/>
    <qos_profile base_name="RapidReliableDurableQos" name="RapidProcessIoSampleProfile">
      <datareader_qos>
        <history>
          <depth>1000</depth>
        </history>
      </datareader_qos>
      <datawriter_qos>
        <publish_mode>
          <!-- flow_controller_name>dds.flow_controller.token_bucket.ProcessIoFlowController</flow_controller_name -->
        </publish_mode>
        <history>
          <depth>1000</depth>
        </history>
      </datawriter_qos>
    </qos_profile>
    <!-- ARC Extension: BatteryPack ========================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidBatteryPackConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidBatteryPackSampleProfile"/>
    <!-- === ARC Extension: Float32 ================================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidFloat32ConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidFloat32SampleProfile"/>
    <!-- === ARC Extension: Geometry ================================================== -->
    <qos_profile base_name="RapidStateQos" name="RapidGeometryAppearanceStateProfile"/>
    <qos_profile base_name="RapidConfigQos" name="RapidGeometryConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidGeometryMeshSampleProfile">
      <datawriter_qos>
        <publish_mode>
          <flow_controller_name>dds.flow_controller.token_bucket.MeshFlowController</flow_controller_name>
        </publish_mode>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>1</depth>
        </history>
        <resource_limits>
          <max_samples>32</max_samples>
          <max_samples_per_instance>32</max_samples_per_instance>
          <max_instances>1</max_instances>
          <initial_instances>1</initial_instances>
          <initial_samples>32</initial_samples>
        </resource_limits>
      </datawriter_qos>
      <datareader_qos>
        <reader_resource_limits>
          <max_fragments_per_sample>4096</max_fragments_per_sample>
        </reader_resource_limits>
        <history>
          <depth>4</depth>
        </history>
      </datareader_qos>
    </qos_profile>
    <!-- ARC Extension: Gps ================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidGpsConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidGpsSampleProfile"/>
    <!-- ARC Extension: Spectrum ================================== -->
    <qos_profile base_name="RapidConfigQos" name="RapidSpectrumConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidSpectrumSampleProfile"/>
    <!-- ARC Extension: StateMachine ========================= -->
    <qos_profile base_name="RapidConfigQos" name="RapidStateMachineConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="RapidStateMachineStateProfile"/>
    <!-- ARC Extension: Ephemeris ============================ -->
    <qos_profile base_name="RapidConfigQos" name="RapidEphemerisConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="RapidEphemerisSampleProfile"/>
    <!-- ================================================================================== -->
    <!-- Astrobee Extensions ============================================================== -->
    <!-- ================================================================================== -->
    <!-- ASTROBEE Extension: AgentState ================================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeeAgentStateProfile">
      <datareader_qos>
        <liveliness>
          <lease_duration>
            <sec>10</sec>
            <nanosec>0</nanosec>
          </lease_duration>
        </liveliness>
      </datareader_qos>
      <datawriter_qos>
        <liveliness>
          <lease_duration>
            <sec>10</sec>
            <nanosec>0</nanosec>
          </lease_duration>
        </liveliness>
      </datawriter_qos>
    </qos_profile>
    <!-- ASTROBEE Extension: ArmState ================================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeeArmStateProfile"/>
    <!-- ASTROBEE Extension: CommState ================================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeeCommStateProfile"/>
    <!-- ASTROBEE Extension: Component ================================== -->
    <qos_profile base_name="RapidConfigQos" name="AstrobeeComponentConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="AstrobeeComponentStateProfile"/>
    <!-- ASTROBEE Extension: CompressedFile ================================ -->
    <qos_profile base_name="RapidReliableQos" name="AstrobeeCompressedFileProfile"/>
    <!-- ASTROBEE Extension: CompressedFileAck ============================= -->
    <qos_profile base_name="RapidAckProfile" name="AstrobeeCompressedFileAckProfile"/>
    <!-- ASTROBEE Extension: Cpu ======================================= -->
    <qos_profile base_name="RapidConfigQos" name="AstrobeeCpuConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="AstrobeeCpuStateProfile"/>
    <!-- ASTROBEE Extension: Current Plan CompressedFile =================== -->
    <qos_profile base_name="RapidReliableDurableQos" name="AstrobeeCurrentCompressedPlanProfile"/>
    <!-- ASTROBEE Extension: DataToDisk ============================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeeDataToDiskStateProfile"/>
    <qos_profile base_name="RapidConfigQos" name="AstrobeeDataTopicsListProfile"/>
    <!-- ASTROBEE Extension: Disk ================================== -->
    <qos_profile base_name="RapidConfigQos" name="AstrobeeDiskConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="AstrobeeDiskStateProfile"/>
    <!-- ASTROBEE Extension: DockState ==================================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeeDockStateProfile">
      <datareader_qos>
        <liveliness>
          <lease_duration>
            <sec>10</sec>
            <nanosec>0</nanosec>
          </lease_duration>
        </liveliness>
      </datareader_qos>
      <datawriter_qos>
        <liveliness>
          <lease_duration>
            <sec>10</sec>
            <nanosec>0</nanosec>
          </lease_duration>
        </liveliness>
      </datawriter_qos>
    </qos_profile>
    <!-- ASTROBEE Extension: PoseStamped ================================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeePoseStampedProfile"/>
    <!-- ASTROBEE Extension: EkfState ================================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeeEkfStateProfile"/>
    <!-- ASTROBEE Extension: Eps ================================== -->
    <qos_profile base_name="RapidConfigQos" name="AstrobeeEpsConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="AstrobeeEpsStateProfile"/>
    <!-- ASTROBEE Extension: Fault ================================== -->
    <qos_profile base_name="RapidConfigQos" name="AstrobeeFaultConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="AstrobeeFaultStateProfile"/>
    <!-- ASTROBEE Extension: GNC Control ============================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeeGncControlStateProfile"/>
    <!-- ASTROBEE Extension: GNC Fam Cmd ============================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeeGncFamCmdStateProfile"/>
    <!-- ASTROBEE Extension: Guest Science =============================== -->
    <qos_profile base_name="RapidConfigQos" name="AstrobeeGuestScienceConfigProfile"/>
    <qos_profile base_name="RapidSampleQos" name="AstrobeeGuestScienceDataProfile"/>
    <qos_profile base_name="RapidStateQos" name="AstrobeeGuestScienceStateProfile"/>
    <!-- ASTROBEE Extension: Inertia ==================================== -->
    <qos_profile base_name="RapidConfigQos" name="AstrobeeInertiaProfile"/>
    <!-- ASTROBEE Extension: Log ======================================== -->
    <qos_profile base_name="RapidSampleQos" name="AstrobeeLogSampleProfile"/>
    <!-- ASTROBEE Extension: Mobility =================================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeeMobilitySettingsStateProfile"/>
    <!-- ASTROBEE Extension: Payload ==================================== -->
    <qos_profile base_name="RapidConfigQos" name="AstrobeePayloadConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="AstrobeePayloadStateProfile"/>
    <!-- ASTROBEE Extension: PlanStatus ================================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeePlanStatusProfile"/>
    <!-- ASTROBEE Extension: PMC Cmd =================================== -->
    <qos_profile base_name="RapidStateQos" name="AstrobeePmcCmdStateProfile"/>
    <!-- ASTROBEE Extension: Telemetry ================================== -->
    <qos_profile base_name="RapidConfigQos" name="AstrobeeTelemetryConfigProfile"/>
    <qos_profile base_name="RapidStateQos" name="AstrobeeTelemetryStateProfile"/>
    <!-- ================================================================================== -->
    <!-- Traclabs Extensions ============================================================== -->
    <!-- ================================================================================== -->
    <!-- Traclabs Extension: Notice  ========================= -->
    <qos_profile base_name="RapidConfigQos" name="TraclabsNoticeConfigProfile"/>
    <qos_profile base_name="RapidAckProfile" name="TraclabsNoticeAckProfile"/>
    <qos_profile base_name="RapidStateQos" name="TraclabsNoticeStateProfile">
      <datareader_qos>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>5</depth>
        </history>
      </datareader_qos>
      <datawriter_qos>
        <history>
          <kind>KEEP_LAST_HISTORY_QOS</kind>
          <depth>5</depth>
        </history>
      </datawriter_qos>
    </qos_profile>
  </qos_library>
  <!-- ===================================================== -->
  <!-- RTI Monitor Qos library -->
  <!-- ===================================================== -->
  <qos_library name="RtiMonitorQosLibrary">
    <!-- RTI Monitor library publishes statistics data as regular DDS traffic. -->
    <!-- To separate this traffic, we put it on a separate DDS domain. -->
    <!-- RTI Monitor GUI frontend likes the default ports better, than the RAPID setup. -->
    <!-- As the Monitor library uses it's own domain-participant, they can just as -->
    <!-- well use default ports with it. -->
    <!-- !!! NOTE: The parameters used below wont work on the KSC tunnel. -->
    <!-- !!! NOTE: Any changes to the parameters below have to be mirrored in the -->
    <!-- !!! RTI Montior Qos config xml -->
    <qos_profile name="RtiMonitorQosProfile">
      <participant_qos>
        <wire_protocol>
          <!-- restore default ports, as RAPID sets others as default -->
          <rtps_well_known_ports>
            <port_base>7400</port_base>
            <domain_id_gain>250</domain_id_gain>
            <participant_id_gain>2</participant_id_gain>
            <builtin_multicast_port_offset>0</builtin_multicast_port_offset>
            <builtin_unicast_port_offset>10</builtin_unicast_port_offset>
            <user_multicast_port_offset>1</user_multicast_port_offset>
            <user_unicast_port_offset>11</user_unicast_port_offset>
          </rtps_well_known_ports>
        </wire_protocol>
        <resource_limits>
          <!-- uncomment the following if your user data type has large type code. You will also need to uncomment the lines            in property to enable large data for UDPv4 and shared memory -->
          <type_code_max_serialized_length>30000</type_code_max_serialized_length>
          <participant_property_list_max_length>64</participant_property_list_max_length>
          <participant_property_string_max_length>2048</participant_property_string_max_length>
        </resource_limits>
        <!-- change the mask to SHMEM if you have no network connection -->
        <transport_builtin>
          <mask>UDPv4 | SHMEM</mask>
        </transport_builtin>
        <participant_name>
          <name>Monitoring UI Application</name>
        </participant_name>
        <receiver_pool>
          <buffer_size>65530</buffer_size>
        </receiver_pool>
        <!-- these are the default values and are here for reference. <discovery>
        <initial_peers>
          <element>builtin.udpv4://239.255.0.1</element>
          <element>builtin.udpv4://localhost</element>
          <element>builtin.shmem://</element>
        </initial_peers>
        <multicast_receive_addresses>
          <element>239.255.0.1</element>
        </multicast_receive_addresses>
      </discovery -->
      <discovery_config>
        <participant_liveliness_lease_duration>
          <sec>100</sec>
          <nanosec>0</nanosec>
        </participant_liveliness_lease_duration>
        <participant_liveliness_assert_period>
          <sec>10</sec>
          <nanosec>0</nanosec>
        </participant_liveliness_assert_period>
        <remote_participant_purge_kind>LIVELINESS_BASED_REMOTE_PARTICIPANT_PURGE</remote_participant_purge_kind>
        <max_liveliness_loss_detection_period>
          <sec>10</sec>
          <nanosec>0</nanosec>
        </max_liveliness_loss_detection_period>
        <initial_participant_announcements>1</initial_participant_announcements>
        <min_initial_participant_announcement_period>
          <sec>2</sec>
          <nanosec>0</nanosec>
        </min_initial_participant_announcement_period>
        <max_initial_participant_announcement_period>
          <sec>2</sec>
          <nanosec>0</nanosec>
        </max_initial_participant_announcement_period>
        <publication_reader>
          <min_heartbeat_response_delay>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </min_heartbeat_response_delay>
          <max_heartbeat_response_delay>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </max_heartbeat_response_delay>
          <heartbeat_suppression_duration>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </heartbeat_suppression_duration>
          <nack_period>
            <sec>0</sec>
            <nanosec>100000000</nanosec>
          </nack_period>
        </publication_reader>
        <subscription_reader>
          <min_heartbeat_response_delay>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </min_heartbeat_response_delay>
          <max_heartbeat_response_delay>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </max_heartbeat_response_delay>
          <heartbeat_suppression_duration>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </heartbeat_suppression_duration>
          <nack_period>
            <sec>0</sec>
            <nanosec>100000000</nanosec>
          </nack_period>
        </subscription_reader>
        <publication_writer>
          <low_watermark>0</low_watermark>
          <high_watermark>1</high_watermark>
          <heartbeat_period>
            <sec>5</sec>
            <nanosec>0</nanosec>
          </heartbeat_period>
          <fast_heartbeat_period>
            <sec>0</sec>
            <nanosec>200000000</nanosec>
          </fast_heartbeat_period>
          <late_joiner_heartbeat_period>
            <sec>0</sec>
            <nanosec>200000000</nanosec>
          </late_joiner_heartbeat_period>
          <max_heartbeat_retries>1000</max_heartbeat_retries>
          <heartbeats_per_max_samples>8</heartbeats_per_max_samples>
          <min_nack_response_delay>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </min_nack_response_delay>
          <max_nack_response_delay>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </max_nack_response_delay>
          <nack_suppression_duration>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </nack_suppression_duration>
          <max_bytes_per_nack_response>65530</max_bytes_per_nack_response>
        </publication_writer>
        <subscription_writer>
          <low_watermark>0</low_watermark>
          <high_watermark>1</high_watermark>
          <heartbeat_period>
            <sec>5</sec>
            <nanosec>0</nanosec>
          </heartbeat_period>
          <fast_heartbeat_period>
            <sec>0</sec>
            <nanosec>200000000</nanosec>
          </fast_heartbeat_period>
          <late_joiner_heartbeat_period>
            <sec>0</sec>
            <nanosec>200000000</nanosec>
          </late_joiner_heartbeat_period>
          <max_heartbeat_retries>1000</max_heartbeat_retries>
          <heartbeats_per_max_samples>8</heartbeats_per_max_samples>
          <min_nack_response_delay>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </min_nack_response_delay>
          <max_nack_response_delay>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </max_nack_response_delay>
          <nack_suppression_duration>
            <sec>0</sec>
            <nanosec>0</nanosec>
          </nack_suppression_duration>
          <max_bytes_per_nack_response>65530</max_bytes_per_nack_response>
        </subscription_writer>
      </discovery_config>
      <property>
        <value>
          <!-- transport properties -->
          <element>
            <name>dds.transport.UDPv4.builtin.recv_socket_buffer_size</name>
            <value>1048576</value>
          </element>
          <!-- uncomment the following to enable large data for UDPv4 transport -->
          <element>
            <name>dds.transport.UDPv4.builtin.parent.message_size_max</name>
            <value>65530</value>
          </element>
          <element>
            <name>dds.transport.UDPv4.builtin.send_socket_buffer_size</name>
            <value>65530</value>
          </element>
          <!-- these are some common properties needing adjusting for UDP and are here for reference. <element>
          <name>dds.transport.UDPv4.builtin.parent.deny_interfaces</name>
          <value>10.50.*</value>
        </element>
        <element>
          <name>dds.transport.UDPv4.builtin.multicast_enabled</name>
          <value>0</value>
        </element>
        <element>
          <name>dds.transport.UDPv4.builtin.parent.multicast_ttl</name>
          <value>3</value>
        </element>
        <element>
          <name>dds.transport.UDPv4.builtin.parent.allow_interfaces</name>
          <value>192.*</value>
        </element> -->
        <!-- uncomment the following to enable large data for shared memory transport -->
        <element>
          <name>dds.transport.shmem.builtin.parent.message_size_max</name>
          <value>65530</value>
        </element>
        <element>
          <name>dds.transport.shmem.builtin.receive_buffer_size</name>
          <value>65530</value>
        </element>
        <element>
          <name>dds.transport.shmem.builtin.received_message_count_max</name>
          <value>32</value>
        </element>
      </value>
    </property>
  </participant_qos>
  <datareader_qos name="BaseReaderProfile">
    <protocol>
      <!-- This property keeps the Monitor UI's readers from showing up in the counts of the monitored application's             discovery metrics. -->
      <!-- mallan 5/5/11 RTI BUG: this property causes rtireplay to choke -->
      <!-- vendor_specific_entity>TRUE</vendor_specific_entity -->
    </protocol>
  </datareader_qos>
  <datareader_qos base_name="RtiMonitorQosProfile::BaseReaderProfile" name="KeepLast1DurableReader">
    <durability>
      <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
    </durability>
    <reliability>
      <kind>RELIABLE_RELIABILITY_QOS</kind>
    </reliability>
    <history>
      <kind>KEEP_LAST_HISTORY_QOS</kind>
      <depth>1</depth>
    </history>
    <!--multicast>
    <value>
      <element>
        <receive_address>239.255.0.2</receive_address>
      </element>
    </value>
  </multicast -->
</datareader_qos>
<datareader_qos base_name="KeepLast1DurableReader" topic_filter="rti/dds/monitoring/*Description"/>
<datareader_qos base_name="RtiMonitorQosProfile::BaseReaderProfile" topic_filter="rti/dds/monitoring/*Statistics">
  <reliability>
    <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
  </reliability>
  <history>
    <kind>KEEP_LAST_HISTORY_QOS</kind>
    <depth>2</depth>
  </history>
</datareader_qos>
<datawriter_qos name="KeepLast1DurableWriter">
  <durability>
    <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
  </durability>
  <reliability>
    <kind>RELIABLE_RELIABILITY_QOS</kind>
  </reliability>
  <history>
    <kind>KEEP_LAST_HISTORY_QOS</kind>
    <depth>1</depth>
  </history>
</datawriter_qos>
<datareader_qos base_name="KeepLast1DurableReader" topic_filter="rti/dds/monitoring/*Status">
  <!-- keep more history for this topic -->
  <history>
    <kind>KEEP_LAST_HISTORY_QOS</kind>
    <depth>10</depth>
  </history>
</datareader_qos>
<datawriter_qos base_name="KeepLast1DurableWriter" topic_filter="rti/dds/monitoring/*Status">
  <!-- keep more history for this topic -->
  <history>
    <kind>KEEP_LAST_HISTORY_QOS</kind>
    <depth>10</depth>
  </history>
</datawriter_qos>
</qos_profile>
</qos_library>
<!-- types -->
<types>
  <include file="EkfState.xml"/>
  <include file="GncFamCmdState.xml"/>
  <include file="GncControlState.xml"/>
  <include file="PmcCmdState.xml"/>
  <include file="PositionSample.xml"/>
  <include file="LogSample.xml"/>
</types>
<!-- Domain Library -->
<domain_library name="MyDomainLibrary">
  <domain domain_id="37" name="MyDomain">
    <register_type name="rapid::PositionSample" type_ref="rapid::PositionSample"/>
    <register_type name="rapid::ext::astrobee::EkfState" type_ref="rapid::ext::astrobee::EkfState"/>
    <register_type name="rapid::ext::astrobee::GncFamCmdState" type_ref="rapid::ext::astrobee::GncFamCmdState"/>
    <register_type name="rapid::ext::astrobee::GncControlState" type_ref="rapid::ext::astrobee::GncControlState"/>
    <register_type name="rapid::ext::astrobee::PmcCmdState" type_ref="rapid::ext::astrobee::PmcCmdState"/>
    <register_type name="rapid::ext::astrobee::LogSample" type_ref="rapid::ext::astrobee::LogSample"/>
    <topic name="rapid_position_sample-sparse" register_type_ref="rapid::PositionSample"/>
    <topic name="rapid_position_sample-vive" register_type_ref="rapid::PositionSample"/>
    <topic name="astrobee_ekf_state" register_type_ref="rapid::ext::astrobee::EkfState"/>
    <topic name="astrobee_gnc_fam_cmd_state" register_type_ref="rapid::ext::astrobee::GncFamCmdState"/>
    <topic name="astrobee_gnc_control_state-shaper" register_type_ref="rapid::ext::astrobee::GncControlState"/>
    <topic name="astrobee_gnc_control_state-traj" register_type_ref="rapid::ext::astrobee::GncControlState"/>
    <topic name="astrobee_pmc_cmd_state" register_type_ref="rapid::ext::astrobee::PmcCmdState"/>
    <topic name="astrobee_log_sample" register_type_ref="rapid::ext::astrobee::LogSample"/>
  </domain>
</domain_library>
<!-- Participant library -->
<domain_participant_library name="MyParticipantLibrary">
  <domain_participant domain_ref="MyDomainLibrary::MyDomain" name="Zero">
    <subscriber name="SparseMappingPoseStampedSubscriber">
      <data_reader name="SparseMappingPoseStampedReader" topic_ref="rapid_position_sample-sparse">
        <datareader_qos base_name="RapidQosLibrary::RapidPositionSampleProfile"/>
      </data_reader>
      <subscriber_qos base_name="RapidQosLibrary::RapidDefaultQos">
        <partition>
          <name>
            <element>Bumble</element>
          </name>
        </partition>
      </subscriber_qos>
    </subscriber>
    <subscriber name="VivePoseStampedSubscriber">
      <data_reader name="VivePoseStampedReader" topic_ref="rapid_position_sample-vive">
        <datareader_qos base_name="RapidQosLibrary::RapidPositionSampleProfile"/>
      </data_reader>
      <subscriber_qos base_name="RapidQosLibrary::RapidDefaultQos">
        <partition>
          <name>
            <element>Bumble</element>
          </name>
        </partition>
      </subscriber_qos>
    </subscriber>
    <subscriber name="EkfSubscriber">
      <data_reader name="EkfReader" topic_ref="astrobee_ekf_state">
        <datareader_qos base_name="RapidQosLibrary::AstrobeeEkfStateProfile"/>
      </data_reader>
      <subscriber_qos base_name="RapidQosLibrary::RapidDefaultQos">
        <partition>
          <name>
            <element>Bumble</element>
          </name>
        </partition>
      </subscriber_qos>
    </subscriber>
    <subscriber name="FamCmdSubscriber">
      <data_reader name="FamCmdReader" topic_ref="astrobee_gnc_fam_cmd_state">
        <datareader_qos base_name="RapidQosLibrary::AstrobeeGncFamCmdStateProfile"/>
      </data_reader>
      <subscriber_qos base_name="RapidQosLibrary::RapidDefaultQos">
        <partition>
          <name>
            <element>Bumble</element>
          </name>
        </partition>
      </subscriber_qos>
    </subscriber>
    <subscriber name="GncControlStateSubscriber">
      <data_reader name="ShaperReader" topic_ref="astrobee_gnc_control_state-shaper">
        <datareader_qos base_name="RapidQosLibrary::AstrobeeGncControlStateProfile"/>
      </data_reader>
      <data_reader name="TrajReader" topic_ref="astrobee_gnc_control_state-traj">
        <datareader_qos base_name="RapidQosLibrary::AstrobeeGncControlStateProfile"/>
      </data_reader>
      <subscriber_qos base_name="RapidQosLibrary::RapidDefaultQos">
        <partition>
          <name>
            <element>Bumble</element>
          </name>
        </partition>
      </subscriber_qos>
    </subscriber>
    <subscriber name="PmcCmdSubscriber">
      <data_reader name="PmcReader" topic_ref="astrobee_pmc_cmd_state">
        <datareader_qos base_name="RapidQosLibrary::AstrobeePmcCmdStateProfile"/>
      </data_reader>
      <subscriber_qos base_name="RapidQosLibrary::RapidDefaultQos">
        <partition>
          <name>
            <element>Bumble</element>
          </name>
        </partition>
      </subscriber_qos>
    </subscriber>
    <subscriber name="LogSubscriber">
      <data_reader name="LogReader" topic_ref="astrobee_log_sample">
        <datareader_qos base_name="RapidQosLibrary::AstrobeeLogSampleProfile"/>
      </data_reader>
      <subscriber_qos base_name="RapidQosLibrary::RapidDefaultQos">
        <partition>
          <name>
            <element>Bumble</element>
          </name>
        </partition>
      </subscriber_qos>
    </subscriber>
  </domain_participant>
</domain_participant_library>
</dds>
